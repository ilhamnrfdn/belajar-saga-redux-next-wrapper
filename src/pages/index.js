import Head from "next/head";
// import Image from "next/image";
import { signIn, useSession, getSession} from "next-auth/react"

import { Layout, Button } from "antd";
import { useEffect } from "react";
import { useRouter } from "next/router";
// import { redirect } from "next/dist/server/api-utils";
const { Content } = Layout;

const contentStyle = {
  textAlign: "center",
  minHeight: 120,
  lineHeight: "120px",
  color: "#fff",
  backgroundColor: "#108ee9",
  position: "relative",
  display: "flex",
  flexDirection: "column",
  justifyContent: "center",
  alignItems: "center",
};

const layoutContent = {
  minHeight: "100vh",
}

let title = "LOGIN CREDENTIALS"
// const { useToken } = theme;

export default function Home() {
  const session = useSession()
  const router= useRouter()
  useEffect(()=>{
    if(session.data != null){
      router.push("/list-data")
    }
  },[])

  const signWithGoogle = ()=> {
    signIn("google", {callbackUrl: `${process.env.NEXT_PUBLIC_HOST_LOCAL}/list-data`})
  }
  const signWithGithub = ()=> {
    signIn("github", {callbackUrl: `${process.env.NEXT_PUBLIC_HOST_LOCAL}/list-data`})
  }
  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

    
      <Layout style={layoutContent}>
        <Content style={contentStyle}>
          <Button><a href="/belajar/auth/signin">SIGN WITH CREDENTIALS</a></Button>
          <Button onClick={signWithGoogle}>SIGN WITH GOOGLE</Button>
          <Button onClick={signWithGithub}>SIGN WITH GITHUB</Button>

        </Content>
      </Layout>
    </>
  )
}





export const getServerSideProps = (async ({ req}) => {
  //   console.log("2. Page.getServerSideProps uses the store to dispatch things");
  const session = await getSession({req})
  if(session){
    return {
      redirect: {
        destination: "/list-data"
      }
    }
  }

  return {
    props:{
      // session
    }
  }
});